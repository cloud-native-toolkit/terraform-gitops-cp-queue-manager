name: gitops-cp-queue-manager
type: gitops
description: >-
  Module to populate a gitops repo with the resources to provision a Queue
  Manager from the cloud pak
tags:
  - tools
  - gitops
  - ibm
  - cloud pak
  - queue manager
versions:
  - platforms:
      - ocp4
    providers:
      - name: gitops
        source: cloud-native-toolkit/gitops
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
      - id: storage
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-util-storage-class-manager.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: license_use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
        moduleRef:
          id: dep-manager
          output: mq.license_use
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageClass
        type: string
        description: Storage class to be used for Qmgr
        moduleRef:
          id: storage
          output: block_storage_class
      - name: mq_version
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
        moduleRef:
          id: dep-manager
          output: mq.version
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.1.0
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: config_map
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
  - platforms:
      - ocp4
    providers:
      - name: gitops
        source: cloud-native-toolkit/gitops
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: license_use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
        moduleRef:
          id: dep-manager
          output: mq.license_use
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageClass
        type: string
        description: Storage class to be used for Qmgr
        default: portworx-db2-rwo-sc
      - name: mq_version
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
        moduleRef:
          id: dep-manager
          output: mq.version
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.7
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: config_map
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
  - platforms:
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: license_use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
        moduleRef:
          id: dep-manager
          output: mq.license_use
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageClass
        type: string
        description: Storage class to be used for Qmgr
        default: portworx-db2-rwo-sc
      - name: mq_version
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
        moduleRef:
          id: dep-manager
          output: mq.version
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.6
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: bin_dir
      - name: config_map
  - platforms:
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: license_use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
        moduleRef:
          id: dep-manager
          output: mq.license_use
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageClass
        type: string
        description: Storage class to be used for Qmgr
        default: portworx-db2-rwo-sc
      - name: mq_version
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
        moduleRef:
          id: dep-manager
          output: mq.version
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.5
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: bin_dir
      - name: config_map
  - platforms:
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: license_use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
        moduleRef:
          id: dep-manager
          output: mq.license_use
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageclass
        type: string
        description: CPU requests for the queue manager instance
        default: portworx-db2-rwo-sc
      - name: mq_version
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
        moduleRef:
          id: dep-manager
          output: mq.version
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.4
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: bin_dir
      - name: config_map
  - platforms:
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: license_use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
        moduleRef:
          id: dep-manager
          output: mq.license_use
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageclass
        type: string
        description: CPU requests for the queue manager instance
        default: portworx-db2-rwo-sc
      - name: mq_version
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
        moduleRef:
          id: dep-manager
          output: mq.version
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.3
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: bin_dir
      - name: config_map
  - platforms:
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageclass
        type: string
        description: CPU requests for the queue manager instance
        default: ibmc-vpc-block-10iops-tier
      - name: mqversion
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.2
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: bin_dir
      - name: config_map
  - platforms:
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageclass
        type: string
        description: CPU requests for the queue manager instance
        default: ibmc-vpc-block-10iops-tier
      - name: mqversion
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.1
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: bin_dir
      - name: config_map
  - platforms:
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalogs
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-catalogs.git
            version: '>= 1.0.0'
      - id: dep-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-cp4i-dependency-management.git
            version: '>= 1.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: mq
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-cp-mq.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: entitlement_key
        type: string
        description: The entitlement key required to access Cloud Pak images
        sensitive: true
        moduleRef:
          id: catalogs
          output: entitlement_key
      - name: license
        type: string
        description: License string for required MQ version
        default: L-RJON-C7QG3S
        moduleRef:
          id: dep-manager
          output: mq.license
      - name: use
        type: string
        description: Usage for Production or Non-Production
        default: NonProduction
      - name: qmgr_name
        type: string
        description: Name of queue manager to be created
        default: QM1
      - name: qmgr_instance_name
        type: string
        description: Name of MQ instance to be created
        default: telco-cloud
      - name: cpulimits
        type: string
        description: CPU limits for the queue manager instance
        default: 500m
      - name: cpurequests
        type: string
        description: CPU requests for the queue manager instance
        default: 500m
      - name: storageclass
        type: string
        description: CPU requests for the queue manager instance
        default: ibmc-vpc-block-10iops-tier
      - name: mqversion
        type: string
        description: Version of MQ to be installed
        default: 9.2.4.0-r1
      - name: config_map
        type: string
        description: Name of config map to created
    version: v1.0.0
    outputs:
      - name: instance_name
        description: The name of the module
      - name: qmgr_instance_name
        description: Name of queue manager created
      - name: bin_dir
      - name: config_map
id: github.com/cloud-native-toolkit/terraform-gitops-cp-queue-manager
